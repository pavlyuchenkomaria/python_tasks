list: упорядоченная изменяемая коллекция, методы списков изменяют сам список
основные методы: append, extend, pop, remove, insert, count, clear, reverse

tuple: неизменяемый список
неизменяемые! -> защита от дурака, возможность использовать в качестве ключа,
требует меньшее количество памяти, чем список
основные методы: те же, что у листа, которые не меняют сам кортеж

еще есть array - список с ограничением на тип данных и размер каждого элемента,
но лучше использовать сразу numpy.array для улучшения производительности

set: множество уникальных элементов в случайном порядке, еще есть frozenset - неизменяемый
основные методы: add, issubset(other), union, difference, remove, discard, update

dict: коллекции произвольных объектов с доступом по ключу / хэш-таблицы / ассоциативные массивы
можно создать генератором d = {a: a ** 2 for a in range(7)}

основные методы: items, keys, pop, values, setdefault
get(key[, default]) - возвращает значение ключа, но если его нет, не бросает исключение, а возвращает default

Объекты некоторых встроенных типов нельзя изменять после создания:
int , float , str , tuple, bool. Их ещё называют immutable объектами.
А объекты других типов, например, dict или list, менять можно, их
называют mutable объектами.

Объект называется хешируемым, если для него можно вычислить хеш-значение,
которое не меняется в течение жизни объекта. Вычисляется хеш вызовом
специального магического метода ( __hash__() ).
Все встроенные неизменяемые объекты хешируемые. Ключи словарей и значения множества обязательно должны
быть хешируемыми.